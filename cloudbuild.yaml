steps:
  ### Build
  - id: 'build'
    name: 'gcr.io/cloud-builders/mvn'
    args: [
      'clean',
      'package',
      '-Dmaven.test.skip=true'
    ]
  ### docker Build
  - id: 'docker build'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/hidoldori-lab-web-01/hidoldori-web:$SHORT_SHA'
      - '.'
  ### docker push
  - id: 'push'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/hidoldori-lab-web-01/hidoldori-web:$SHORT_SHA'
  # [START cloudbuild-trigger-cd]
  -
  # This step clones the hello-cloudbuild-env repository
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Clone env repository
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        gcloud source repos clone hidoldori-env && \
        cd hidoldori-env && \
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

  # This step generates the new manifest
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Generate manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        sed "s/SHORT_SHA/${SHORT_SHA}/g" > hidoldori-env/kubernetes.yaml
  # This step pushes the manifest back to hello-cloudbuild-env
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Push manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        set -x && \
        cd hidoldori-env && \
        git add kubernetes.yaml && \
        git commit -m "Deploying image gcr.io/${PROJECT_ID}/hello-cloudbuild:${SHORT_SHA}
        Built from commit ${COMMIT_SHA} of repository hello-cloudbuild-app
        Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
        git push origin master